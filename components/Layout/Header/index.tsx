import Link from "next/link";
import { useState, useEffect } from "react";
import { SectionContainer } from "components/common/Elements/Container";
import { getScroll } from "lib/getScroll";
import { PrimaryButton } from "components/common/Elements/Button";
import {
  Flex,
  HeaderWrapper,
} from "components/common/Elements/Container/styles";
import {
  StyledLink,
  FixedHeader,
  MenuItemContainer,
} from "components/Layout/Header/styles";

export const ElementLogo = () => (
  <svg
    width="197"
    height="31"
    viewBox="0 0 197 31"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M1.21938 30C0.926043 30 0.686043 29.9067 0.499377 29.72C0.31271 29.5333 0.219377 29.2933 0.219377 29V3C0.219377 2.70667 0.31271 2.46667 0.499377 2.28C0.686043 2.09333 0.926043 2 1.21938 2H19.3394C19.6327 2 19.8727 2.09333 20.0594 2.28C20.246 2.46667 20.3394 2.70667 20.3394 3V6.2C20.3394 6.46667 20.246 6.69333 20.0594 6.88C19.8727 7.06667 19.6327 7.16 19.3394 7.16H6.37938V13.44H18.4594C18.7527 13.44 18.9927 13.5333 19.1794 13.72C19.366 13.9067 19.4594 14.1467 19.4594 14.44V17.4C19.4594 17.6667 19.366 17.8933 19.1794 18.08C18.9927 18.2667 18.7527 18.36 18.4594 18.36H6.37938V24.84H19.6594C19.9527 24.84 20.1927 24.9333 20.3794 25.12C20.566 25.3067 20.6594 25.5467 20.6594 25.84V29C20.6594 29.2933 20.566 29.5333 20.3794 29.72C20.1927 29.9067 19.9527 30 19.6594 30H1.21938ZM26.3747 30C26.0814 30 25.8414 29.9067 25.6547 29.72C25.468 29.5333 25.3747 29.2933 25.3747 29V2.6C25.3747 2.30666 25.468 2.06667 25.6547 1.88C25.8414 1.69333 26.0814 1.6 26.3747 1.6H30.3747C30.6414 1.6 30.868 1.69333 31.0547 1.88C31.2414 2.06667 31.3347 2.30666 31.3347 2.6V29C31.3347 29.2933 31.2414 29.5333 31.0547 29.72C30.868 29.9067 30.6414 30 30.3747 30H26.3747ZM46.0703 30.4C43.0036 30.4 40.5636 29.5467 38.7503 27.84C36.9636 26.1333 36.017 23.6533 35.9103 20.4C35.9103 20.1867 35.9103 19.9067 35.9103 19.56C35.9103 19.1867 35.9103 18.8933 35.9103 18.68C36.017 16.6267 36.4836 14.8667 37.3103 13.4C38.137 11.9067 39.297 10.7733 40.7903 10C42.2836 9.2 44.0303 8.8 46.0303 8.8C48.2703 8.8 50.137 9.26667 51.6303 10.2C53.1503 11.1067 54.2836 12.36 55.0303 13.96C55.8036 15.5333 56.1903 17.3467 56.1903 19.4V20.32C56.1903 20.5867 56.0836 20.8133 55.8703 21C55.6836 21.1867 55.457 21.28 55.1903 21.28H42.1103C42.1103 21.3067 42.1103 21.36 42.1103 21.44C42.1103 21.4933 42.1103 21.5467 42.1103 21.6C42.137 22.4533 42.297 23.24 42.5903 23.96C42.9103 24.6533 43.3503 25.2133 43.9103 25.64C44.497 26.0667 45.1903 26.28 45.9903 26.28C46.657 26.28 47.2036 26.1867 47.6303 26C48.057 25.8133 48.4036 25.5867 48.6703 25.32C48.9636 25.0533 49.177 24.8267 49.3103 24.64C49.5503 24.3733 49.737 24.2133 49.8703 24.16C50.0303 24.08 50.2703 24.04 50.5903 24.04H54.7503C55.017 24.04 55.2303 24.12 55.3903 24.28C55.577 24.4133 55.657 24.6133 55.6303 24.88C55.6036 25.3067 55.377 25.84 54.9503 26.48C54.5503 27.0933 53.9503 27.7067 53.1503 28.32C52.3503 28.9067 51.3503 29.4 50.1503 29.8C48.977 30.2 47.617 30.4 46.0703 30.4ZM42.1103 17.64H49.9503V17.56C49.9503 16.6 49.7903 15.7733 49.4703 15.08C49.177 14.36 48.737 13.8 48.1503 13.4C47.5636 13 46.857 12.8 46.0303 12.8C45.2036 12.8 44.497 13 43.9103 13.4C43.3236 13.8 42.8703 14.36 42.5503 15.08C42.257 15.7733 42.1103 16.6 42.1103 17.56V17.64ZM61.5488 30C61.2821 30 61.0554 29.9067 60.8688 29.72C60.6821 29.5333 60.5888 29.2933 60.5888 29V10.2C60.5888 9.90667 60.6821 9.66667 60.8688 9.48C61.0554 9.29333 61.2821 9.2 61.5488 9.2H65.2688C65.5354 9.2 65.7621 9.29333 65.9488 9.48C66.1621 9.66667 66.2688 9.90667 66.2688 10.2V11.56C66.8021 10.8133 67.5354 10.1733 68.4688 9.64C69.4288 9.10667 70.5621 8.82667 71.8688 8.8C74.9621 8.74667 77.0821 9.92 78.2288 12.32C78.8421 11.28 79.7221 10.44 80.8688 9.8C82.0421 9.13333 83.3221 8.8 84.7088 8.8C86.0954 8.8 87.3488 9.12 88.4688 9.76C89.5888 10.3733 90.4688 11.3333 91.1088 12.64C91.7754 13.92 92.1088 15.5733 92.1088 17.6V29C92.1088 29.2933 92.0154 29.5333 91.8288 29.72C91.6421 29.9067 91.4154 30 91.1488 30H87.1888C86.9221 30 86.6954 29.9067 86.5088 29.72C86.3221 29.5333 86.2288 29.2933 86.2288 29V17.92C86.2288 16.8267 86.0688 15.9733 85.7488 15.36C85.4288 14.72 85.0021 14.2667 84.4688 14C83.9621 13.7333 83.3888 13.6 82.7488 13.6C82.1888 13.6 81.6421 13.7333 81.1088 14C80.6021 14.2667 80.1754 14.72 79.8288 15.36C79.5088 15.9733 79.3488 16.8267 79.3488 17.92V29C79.3488 29.2933 79.2554 29.5333 79.0688 29.72C78.8821 29.9067 78.6421 30 78.3488 30H74.4288C74.1354 30 73.8954 29.9067 73.7088 29.72C73.5221 29.5333 73.4288 29.2933 73.4288 29V17.92C73.4288 16.8267 73.2688 15.9733 72.9488 15.36C72.6288 14.72 72.2021 14.2667 71.6688 14C71.1621 13.7333 70.6021 13.6 69.9888 13.6C69.4288 13.6 68.8821 13.7467 68.3488 14.04C67.8154 14.3067 67.3754 14.7467 67.0288 15.36C66.7088 15.9733 66.5488 16.8133 66.5488 17.88V29C66.5488 29.2933 66.4554 29.5333 66.2688 29.72C66.0821 29.9067 65.8554 30 65.5888 30H61.5488ZM106.636 30.4C103.569 30.4 101.129 29.5467 99.3159 27.84C97.5293 26.1333 96.5826 23.6533 96.4759 20.4C96.4759 20.1867 96.4759 19.9067 96.4759 19.56C96.4759 19.1867 96.4759 18.8933 96.4759 18.68C96.5826 16.6267 97.0493 14.8667 97.8759 13.4C98.7026 11.9067 99.8626 10.7733 101.356 10C102.849 9.2 104.596 8.8 106.596 8.8C108.836 8.8 110.703 9.26667 112.196 10.2C113.716 11.1067 114.849 12.36 115.596 13.96C116.369 15.5333 116.756 17.3467 116.756 19.4V20.32C116.756 20.5867 116.649 20.8133 116.436 21C116.249 21.1867 116.023 21.28 115.756 21.28H102.676C102.676 21.3067 102.676 21.36 102.676 21.44C102.676 21.4933 102.676 21.5467 102.676 21.6C102.703 22.4533 102.863 23.24 103.156 23.96C103.476 24.6533 103.916 25.2133 104.476 25.64C105.063 26.0667 105.756 26.28 106.556 26.28C107.223 26.28 107.769 26.1867 108.196 26C108.623 25.8133 108.969 25.5867 109.236 25.32C109.529 25.0533 109.743 24.8267 109.876 24.64C110.116 24.3733 110.303 24.2133 110.436 24.16C110.596 24.08 110.836 24.04 111.156 24.04H115.316C115.583 24.04 115.796 24.12 115.956 24.28C116.143 24.4133 116.223 24.6133 116.196 24.88C116.169 25.3067 115.943 25.84 115.516 26.48C115.116 27.0933 114.516 27.7067 113.716 28.32C112.916 28.9067 111.916 29.4 110.716 29.8C109.543 30.2 108.183 30.4 106.636 30.4ZM102.676 17.64H110.516V17.56C110.516 16.6 110.356 15.7733 110.036 15.08C109.743 14.36 109.303 13.8 108.716 13.4C108.129 13 107.423 12.8 106.596 12.8C105.769 12.8 105.063 13 104.476 13.4C103.889 13.8 103.436 14.36 103.116 15.08C102.823 15.7733 102.676 16.6 102.676 17.56V17.64ZM122.114 30C121.848 30 121.621 29.9067 121.434 29.72C121.248 29.5333 121.154 29.2933 121.154 29V10.2C121.154 9.90667 121.248 9.66667 121.434 9.48C121.621 9.29333 121.848 9.2 122.114 9.2H126.034C126.328 9.2 126.568 9.29333 126.754 9.48C126.941 9.66667 127.034 9.90667 127.034 10.2V11.76C127.728 10.9067 128.621 10.2 129.714 9.64C130.808 9.08 132.141 8.8 133.714 8.8C135.288 8.8 136.661 9.16 137.834 9.88C139.034 10.5733 139.968 11.6 140.634 12.96C141.328 14.2933 141.674 15.92 141.674 17.84V29C141.674 29.2933 141.568 29.5333 141.354 29.72C141.168 29.9067 140.941 30 140.674 30H136.434C136.141 30 135.901 29.9067 135.714 29.72C135.528 29.5333 135.434 29.2933 135.434 29V18.08C135.434 16.6667 135.088 15.5733 134.394 14.8C133.728 14 132.741 13.6 131.434 13.6C130.181 13.6 129.181 14 128.434 14.8C127.688 15.5733 127.314 16.6667 127.314 18.08V29C127.314 29.2933 127.221 29.5333 127.034 29.72C126.848 29.9067 126.621 30 126.354 30H122.114ZM156.632 30C154.979 30 153.566 29.7333 152.392 29.2C151.219 28.64 150.326 27.7867 149.712 26.64C149.126 25.4933 148.832 24.0533 148.832 22.32V13.92H145.712C145.419 13.92 145.179 13.8267 144.992 13.64C144.806 13.4533 144.712 13.2133 144.712 12.92V10.2C144.712 9.90667 144.806 9.66667 144.992 9.48C145.179 9.29333 145.419 9.2 145.712 9.2H148.832V2.6C148.832 2.30666 148.926 2.06667 149.112 1.88C149.326 1.69333 149.566 1.6 149.832 1.6H153.752C154.046 1.6 154.286 1.69333 154.472 1.88C154.659 2.06667 154.752 2.30666 154.752 2.6V9.2H159.752C160.019 9.2 160.246 9.29333 160.432 9.48C160.619 9.66667 160.712 9.90667 160.712 10.2V12.92C160.712 13.2133 160.619 13.4533 160.432 13.64C160.246 13.8267 160.019 13.92 159.752 13.92H154.752V21.84C154.752 22.8533 154.926 23.6533 155.272 24.24C155.646 24.8 156.286 25.08 157.192 25.08H160.112C160.379 25.08 160.606 25.1733 160.792 25.36C160.979 25.5467 161.072 25.7733 161.072 26.04V29C161.072 29.2933 160.979 29.5333 160.792 29.72C160.606 29.9067 160.379 30 160.112 30H156.632Z"
      fill="white"
    />
    <path
      d="M166.402 30C166.109 30 165.869 29.9067 165.682 29.72C165.496 29.5333 165.402 29.2933 165.402 29V3C165.402 2.70667 165.496 2.46667 165.682 2.28C165.869 2.09333 166.109 2 166.402 2H184.242C184.536 2 184.776 2.09333 184.962 2.28C185.149 2.46667 185.242 2.70667 185.242 3V6.4C185.242 6.69333 185.149 6.93333 184.962 7.12C184.776 7.30667 184.536 7.4 184.242 7.4H171.642V14.16H183.442C183.736 14.16 183.976 14.2533 184.162 14.44C184.349 14.6267 184.442 14.8667 184.442 15.16V18.56C184.442 18.8267 184.349 19.0533 184.162 19.24C183.976 19.4267 183.736 19.52 183.442 19.52H171.642V29C171.642 29.2933 171.549 29.5333 171.362 29.72C171.176 29.9067 170.936 30 170.642 30H166.402ZM191.244 30C190.977 30 190.751 29.9067 190.564 29.72C190.377 29.5333 190.284 29.2933 190.284 29V10.2C190.284 9.90667 190.377 9.66667 190.564 9.48C190.751 9.29333 190.977 9.2 191.244 9.2H195.244C195.537 9.2 195.777 9.29333 195.964 9.48C196.151 9.66667 196.244 9.90667 196.244 10.2V29C196.244 29.2933 196.151 29.5333 195.964 29.72C195.777 29.9067 195.537 30 195.244 30H191.244ZM191.124 6C190.857 6 190.631 5.90667 190.444 5.72C190.257 5.53333 190.164 5.29333 190.164 5V1.8C190.164 1.50667 190.257 1.26667 190.444 1.08C190.631 0.866666 190.857 0.76 191.124 0.76H195.324C195.617 0.76 195.857 0.866666 196.044 1.08C196.257 1.26667 196.364 1.50667 196.364 1.8V5C196.364 5.29333 196.257 5.53333 196.044 5.72C195.857 5.90667 195.617 6 195.324 6H191.124Z"
      fill="#8FD8E7"
    />
  </svg>
);

export const Header = () => {
  const [changeColor, setChangeColor] = useState<boolean>(false);

  const checkScrollTop = (event: any) => {
    const offsetFromTop = getScroll(event.target);

    if (!changeColor && offsetFromTop > 100) {
      setChangeColor(true);
    } else if (offsetFromTop <= 100) {
      setChangeColor(false);
    }
  };

  useEffect(() => {
    window.addEventListener("scroll", checkScrollTop);
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  const MenuItem = () => {
    const scrollTo = (id: string) => {
      const element = document?.getElementById(id) as HTMLDivElement;
      element.scrollIntoView({
        behavior: "smooth",
      });
    };

    return (
      <MenuItemContainer>
        <StyledLink onClick={() => scrollTo("about")}>
          <p>Fixed APR</p>
        </StyledLink>
        <StyledLink onClick={() => scrollTo("mission")}>
          <p>Add Liquidity</p>
        </StyledLink>
        <StyledLink onClick={() => scrollTo("product")}>
          <p>Pools</p>
        </StyledLink>
        <StyledLink onClick={() => scrollTo("product")}>
          <p>Build</p>
        </StyledLink>
        <StyledLink onClick={() => scrollTo("product")}>
          <p>Treasury Management</p>
        </StyledLink>
        <StyledLink>
          <hr />
        </StyledLink>
        <Link href="https://google.com/" passHref={true}>
          <StyledLink>
            <PrimaryButton variant="primary" text="Launch application" />
          </StyledLink>
        </Link>
      </MenuItemContainer>
    );
  };

  return (
    <FixedHeader changeColor={changeColor}>
      <SectionContainer gridColumn="1/13">
        <HeaderWrapper>
          <Flex>
            <ElementLogo />
            <MenuItem />
          </Flex>
        </HeaderWrapper>
      </SectionContainer>
    </FixedHeader>
  );
};
